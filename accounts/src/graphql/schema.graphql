extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.4", import: ["@key"])
"""
An account is a unique user.
"""
type Account @("fields":"id"){
     "The unique ID associated with the account."
    id: ID!
     "The email associated with the account (must be unique)."
    email:String!
    createdAt:DateTime!
}

type Query {
     "Retrieves a single account by ID."
    getAccount(id: ID!): Account ! @private
     "Retrieves a list of accounts."
    getAccounts: [Account]  @private
     "Retrieves the account of the currently logged-in user."
    viewer: Account 
}
type Mutation {
     "Creates a new account."
    createAccount(input: createAccountInput!): Account!
     "Updates an account's email."
    updateAccount(input: updateAccountEmailInput!): Account!
     "Deletes an account."
    deleteAccount(id:ID!): Boolean!@scope (permissions:["delete:accounts"])
    updateAccountPassword(input:updateAccountPasswordInput):Account@owner(argumentName:"input.id")
}   
# INPUTS
"""
Provides data to create a new account.
"""
input createAccountInput{
     "The new account's email (must be unique)."
    email: String!
     "The new account's password."
    password:String!
}

"""
Provides data to update an existing account's email.
"""
input updateAccountEmailInput{
      "The unique ID associated with the account."
    id: ID!
    "The updated account email."
    email: String
}

"""
Provides data to update an existing account's password. A current password and new password are required to update a password.
"""
input updatePasswordInput{
      "The unique ID associated with the account."
    id: ID!
    "The current account password."
    currentPassword: String!
    "The new account password."
    newPassword: String!
}


"""
Provides data to update an existing account's password. A current password and new password are required to update a password.
"""
input updateAccountPasswordInput{
    "The unique ID associated with the account."
    id: ID!
      "The existing account password."
    password: String!
    "The unique ID associated with the account."
    newPassword:String!
}


