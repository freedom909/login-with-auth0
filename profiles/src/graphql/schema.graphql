extend schema
@link(url: "https://specs.apollo.dev/federation/v2.4",import:["@key"] )

"""
An ISO 8601-encoded UTC date string.
"""
scalar DateTime

type Query {
"Retrieves a single profile by username."
profile(username: String!): Profile! @private
"Retrieves a list of profiles."
profiles: [Profile] @private
}

"""
A profile contains metadata about a specific user.
"""
type Profile @key(fields: "id") {
"The unique ID of the user's profile."
id: ID!
"The date and time the profile was created."
createdAt: DateTime!
"The Auth0 account tied to this profile."
account: Account!
"The full name of the user."
fullName: String
"A tag-like list of topics of interest to the user."
interests: [String]
"The unique username of the user."
username: String!
# ...
"Whether the currently authenticated user has another user in their
network."
isInNetwork: Boolean
"Other users that have been added to the user's network."
network: [Profile]
# ...
}

"""
An account is a unique Auth0 user.
"""
type Account @key(fields: "id") {
id: ID!
profile: Profile
}

"""
Provides data to create a new user profile.
"""
input CreateProfileInput {
"The new user's unique Auth0 ID."
accountId: ID!
"The new user's full name."
fullName: String
"A tag-like list of topics of interest to the user."
interests: [String]
"The new user's username (must be unique)."
username: String!
}

"""
Provides the unique ID of an existing profile to add or remove from a
network.
"""
input NetworkMemberInput {
"The unique Auth0 ID of the user that is updating their network."
accountId: ID!
"The unique Auth0 ID of the user to be added or removed from a network."
networkMemberId: ID!
}

type Mutation {
"Creates a new profile tied to an Auth0 account."
createProfile(input: CreateProfileInput!): Profile!
@owner(argumentName: "input.accountId")
# ...
"Deletes a user profile."
deleteProfile(accountId: ID!): Boolean!
@owner(argumentName: "input.accountId")
# ...
"Adds a user to a network."
addToNetwork(input: NetworkMemberInput!):  Profile!
@owner(argumentName: "input.accountId")
# ...
"Removes a user from a network."
removeFromNetwork(input: NetworkMemberInput!):  Profile!
@owner(argumentName: "input.accountId")
}